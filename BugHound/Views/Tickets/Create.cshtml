@model BugHound.Models.Ticket

@{
    ViewBag.Title = "Create";
}
<br />
<h2>Create a new BugHound Ticket</h2>

<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                
                <hr />
                @*
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.EnteredById, "EnteredById", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("EnteredById", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.EnteredById, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
                        </div>
                    </div>
                *@
                <div class="form-group">
                    @Html.HiddenFor(model => model.Id)
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.PriorityId, "PriorityId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <label class="control-label col-md-2">Priority</label>
                    <div class="col-md-10">
                        @Html.DropDownList("PriorityId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PriorityId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.TypeId, "TypeId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <label class="control-label col-md-2">Type</label>
                    <div class="col-md-10">
                        @Html.DropDownList("TypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.StatusId, "StatusId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <label class="control-label col-md-2">StatusId</label>
                    <div class="col-md-10">
                        @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.ProjectId, "ProjectId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <label class="control-label col-md-2">Project</label>
                    <div class="col-md-10">
                        @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @*@Html.LabelFor(model => model.AssignedId, "AssignedId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <label class="control-label col-md-2">Assign to</label>
                    <div class="col-md-10">
                        @Html.DropDownList("AssignedId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AssignedId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*
                    <div class="form-group">
                        @Html.LabelFor(model => model.LastedUpdated, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastedUpdated, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastedUpdated, "", new { @class = "text-danger" })
                        </div>
                    </div>
                *@

                <div class="form-group">
                    @Html.LabelFor(model => model.Narration, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Narration, new { @class = "wide-400", @cols = 89, @rows = 3 })
                        @Html.ValidationMessageFor(model => model.Narration, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*
                    <div class="form-group">
                        @Html.LabelFor(model => model.Attachments, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Attachments)
                                @Html.ValidationMessageFor(model => model.Attachments, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                *@
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
    
</div>

<div>
    @Html.ActionLink("Back to My List", "Index")
</div>
